

<style lang="less" scoped>
page {
  background-color: #FFFFFF;
  ._bg{
    width: 100vw;
    height: auto;
    position: fixed;
    top: 0;
    left: 0;
  }
  ._container {
    padding: 30rpx;

    ._book_box {
      padding: 30rpx 0;
      display: flex;
      border-bottom: 2rpx solid #f5f5f5;
      margin-bottom: 30rpx;
      ._icon_del{
        width: 28rpx;
        height: 28rpx;
      }

      ._img {
        width: 172rpx;
        height: 228rpx;
        border-radius: 16rpx;
        box-shadow: 0rpx 4rpx 16rpx 0rpx rgba(0, 0, 0, 0.15);
        margin-right: 24rpx;
      }
    }
    ._enter_btn{
      width: 156rpx;
      height: 60rpx;
      border-radius: 40rpx;
      border: 2rpx solid #ADCEFF;
    }
    ._btn {
      width: 320rpx;
      height: 72rpx;
      background: linear-gradient(90deg, #9DC0F8 0%, #508AFC 100%);
      //box-shadow: 0rpx 8rpx 24rpx 0rpx rgba(55, 123, 203, 0.5);
      border-radius: 40rpx;
      margin: auto;
    }
    ._btnV2{
      background: none;
      border: 2rpx solid #ADCEFF;
      box-shadow: none;
    }
  }
}
</style>
<template>
  <view class="_container " style="margin-top:{{CustomBar}}px;">
    <view class="_book_box" v-for="(item, index) in bookData" :key="index">
      <image src="{{item.image}}" mode="aspectFill"
             class="_img"></image>
      <view style="width: 474rpx;">
        <view class="f-fbc">
          <view class="font_30 bold color333 lineH42 ellipsis_1" style="width: 416rpx;">{{item.title}}</view>
          <image class="_icon_del" src="~@/images/icon/del_icon_red.png" mode="aspectFit" @tap="delFn(index)"></image>
        </view>
        <view class="color666 lineH34 font_24 marginT10 ellipsis_1">作者：{{item.author}}</view>
        <view class="color666 lineH34 font_24 marginT30 ellipsis_2">简介：{{item.summary}}</view>
        <picker @change="sortChange($wx)" data-index="{{index}}" range-key="name" value="{{item.sortsIndex}}" range="{{sorts}}">
          <view class="color666 lineH34 font_24 marginT10 ellipsis_1 color-theme">分类：{{sorts[item.sortsIndex].name}}</view>
        </picker>
      </view>
    </view>
    <view class="f-fec">
<!--      <view class="_enter_btn color-theme f-fcc font_24 bold lineH34" @tap="addCollect" v-if="bookList.length>0">一键录入</view>-->
    </view>
    <view class="heigth160"></view>
    <view class="heigth90"></view>
    <view class="fixed text-c f-fc" style="bottom: 120rpx;width: 100%;left: 0;padding: 18rpx">
      <view class="_btn color-theme f-fcc _btnV2 spacing2" @tap="enterFn">扫描ISBN码</view>
      <view class="_btn colorfff f-fcc spacing2" @tap="addCollect">一键录入</view>
    </view>
  </view>
</template>
<!--x-->


<script>
import wepy from '@wepy/core'
import https from '../../mixins/https'
import base from '../../mixins/base'
import {getPhoneNumber} from '../../utils/util'
import {service} from '../../config'

wepy.page({
  config: {},
  mixins: [https, base],

  data: {
    showCustom: false,
    id: 0,
    isbn: '',
    page: 1,
    sorts: [],
    sortsIndex: 0,
    bookData: [],
    bookList: []
  },
  onPageScroll(res) {
    let top = res.scrollTop
    this.showCustom = top > 18
  },
// 上拉获取更多数据
  onReachBottom() {
    // if (!this.no_more) {
    //   this.getComments()
    // }
  },
  // 下拉刷新
  onPullDownRefresh() {
    // this.page = 1
    // this.list = []
    // this.getComments()
  },
  methods: {

    sortChange(e) { // 分类下拉
      let {index} = e.target.dataset, vm = this
      vm.$nextTick(() => {
        vm.bookData[index].sortsIndex = e.detail.value
      })
      vm.bookList[index].sort_id = vm.sorts[e.detail.value].id
    },
    addCollect() {
      let vm = this
      let data = {
        books: vm.bookList
      }
      if (vm.bookList.length < 1) return vm.$showToast('请先扫码ISBN码')
      vm.$post({url: `${service.host}/libraries/${vm.id}/books/store`, data}).then(({code, data}) => {
        if (code === 0) {
          console.log(data)
          vm.$Toast_success('录入成功')
          vm.bookData = []
          vm.bookList = []
          setTimeout(() => {
            vm.$gotoBackV2(1, {id: vm.id})
          }, 800)
        }
      })
    },
    delFn(index) { // 录书
      this.bookData.splice(index, 1)
      this.bookList.splice(index, 1)
    },
    enterFn() { // 录书
      let vm = this
      wx.scanCode({
        success: (res) => {
          console.log(res.result)
          vm.initPageData(res.result)
        }
      })
    },
    initPageData(isbn) {
      let vm = this,
        data = {
          isbn: isbn,
          owner: wx.getStorageSync('openid')
        }
      vm.$post({url: `${service.host}/libraries/${vm.id}/books`, data}).then(({code, data}) => {
        if (code === 0) {
          if (data.class_id == 0) {
            data.sortsIndex = 0
          } else {
            for (let index in data.sorts) {
              if (data.class_id === data.sorts[index].id) {
                data.sortsIndex = index
              }
            }
          }
          vm.bookData.push(data)
          let sortsarr = {
            id: data.id,
            sort_id: data.class_id == 0 ? data.sorts[0].id : data.class_id
          }
          vm.sorts = data.sorts
          vm.bookList.push(sortsarr)
          console.log(vm.bookData)
          console.log(vm.bookList)
        }
      })
    },
    goto(path) {
      this.$goto(path)
    }
  },
  onLoad(e) {
    this.id = e.id
    this.isbn = e.isbn
    this.initPageData(e.isbn)
  },
  created() {
    let app = this.$app.$options
  }
})
</script>
<config>
{
navigationBarTitleText: '录入图书',
enablePullDownRefresh: true,
<!--navigationStyle: 'custom',-->
backgroundColorTop: '#F4F7FC',
backgroundColorBottom: '#F4F7FC',
"usingComponents": {
<!--navigation: '~@/components/navigation'-->
}
}
</config>
